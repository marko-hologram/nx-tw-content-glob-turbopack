const path = require('path');

/** @type {import('tailwindcss').Config} */
module.exports = {
  // Default pattern generated by NX, but NX produces absolute paths usually. Those behave the same as examples here with relative paths.
  // Doesn't work for HMR, only works for initial startup during serve. Behaves the same if source code is directly in this app or in a monorepo package so it's not a monorepo issue.
  content: [
    "./src/**/*!(*.stories|*.spec).{ts,tsx,js,jsx,html}",
    '../../packages/test/**/*!(*.stories|*.spec).{ts,tsx,js,jsx,html}',
  ],
  // // Works for HMR, but doesn't exclude stories and spec files, so those get picked up by Tailwind
  // content: [
  //   "./src/**/*.{ts,tsx,js,jsx,html}",
  //   '../../packages/test/**/*.{ts,tsx,js,jsx,html}',
  // ],
  // // Full example that covers the app and a monorepo package while excluding stories and spec files
  // content: [
  //   "./src/**/*.{ts,tsx,js,jsx,html}",
  //   "!./src/**/(*.stories|*.spec).{ts,tsx,js,jsx,html}",
  //   '../../packages/test/**/*.{ts,tsx,js,jsx,html}',
  //   // Notice how the negative pattern is using "!" at the start of the path
  //   '!../../packages/test/**/(*.stories|*.spec).{ts,tsx,js,jsx,html}',
  // ],
  // Absolute paths don't work as well. This is the same example as the first one, but with absolute paths instead
  // content: [
  //   path.join(__dirname, "./src/**/*!(*.stories|*.spec).{ts,tsx,js,jsx,html}"),
  //   path.join(__dirname, '../../packages/test/**/*!(*.stories|*.spec).{ts,tsx,js,jsx,html}'),
  // ],
  theme: {
    extend: {},
  },
  plugins: [],
};
